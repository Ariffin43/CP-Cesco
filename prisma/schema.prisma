generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id       Int       @id @default(autoincrement())
  username String    @db.VarChar(50)
  email    String    @unique @db.VarChar(100)
  password String    @db.VarChar(255)
  role     user_role @default(user)
}

model Project {
  id            BigInt         @id @default(autoincrement())
  jobNo         String         @map("job_no") @db.VarChar(64)
  customer      String         @map("customer") @db.VarChar(256)
  projectName   String         @map("project_name") @db.VarChar(256)
  description   String         @map("description")
  startDate     DateTime       @map("start_date") @db.Date
  endDate       DateTime       @map("end_date") @db.Date
  status        project_status @default(Pending) @map("status")
  pic           String?        @map("pic") @db.VarChar(128)
  createdAt     DateTime       @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt     DateTime       @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  contract_type contract_type?
  add_duration  Int?

  @@index([startDate, endDate], map: "ix_project_dates")
  @@index([status], map: "ix_project_status")
  @@map("project")
}

model certif {
  id        Int       @id @default(autoincrement())
  title     String    @db.VarChar(255)
  createdAt DateTime? @default(now()) @db.Timestamp(6)
  updatedAt DateTime? @default(now()) @updatedAt @db.Timestamp(6)
  image     Bytes
}

model gallery {
  id        Int       @id @default(autoincrement())
  title     String    @db.VarChar(255)
  image     Bytes
  createdAt DateTime? @default(now()) @db.Timestamp(6)
  updatedAt DateTime? @default(now()) @updatedAt @db.Timestamp(6)
}

model machine_categories {
  id         Int        @id @default(autoincrement())
  service_id Int
  name       String     @db.VarChar(255)
  desc       String?
  image      Bytes?
  createdAt  DateTime?  @default(now()) @db.Timestamp(6)
  updatedAt  DateTime?  @default(now()) @db.Timestamp(6)
  services   services   @relation(fields: [service_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  machines   machines[]
}

model machines {
  id                 Int                @id @default(autoincrement())
  category_id        Int
  name               String             @db.VarChar(255)
  desc               String?
  image              Bytes?
  createdAt          DateTime?          @default(now()) @db.Timestamp(6)
  updatedAt          DateTime?          @default(now()) @db.Timestamp(6)
  machine_categories machine_categories @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model services {
  id                 Int                  @id @default(autoincrement())
  name               String               @db.VarChar(255)
  createdAt          DateTime?            @default(now()) @db.Timestamp(6)
  updatedAt          DateTime?            @default(now()) @db.Timestamp(6)
  desc               String               @default("-")
  icon               String               @default("globe.svg") @db.VarChar(255)
  machine_categories machine_categories[]
}

enum user_role {
  admin
  user
}

enum project_status {
  Pending
  Ongoing
  Finish
  Cancel
}

enum contract_type {
  LUMPSUM
  DAILY_RATE
}
